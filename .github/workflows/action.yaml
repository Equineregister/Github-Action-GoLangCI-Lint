---
name: GoLangCI
on:
  workflow_call:
    inputs:
      lintVersion:
        type: string
        default: latest
        required: false
      goVersion:
        type: string
        default: 1.21.x
        required: false
    secrets:
      bitbucketSSHKey:
        required: true
      sshKey:
        required: true
      wireguardDevEndpoint:
        required: true
      wireguardDevPrivateKey:
        required: true
      wireguardDevPublicKey:
        required: true
env:
  ACTIONS_ALLOW_UNSECURE_COMMANDS: true
  GOPRIVATE: "bitbucket.org/scanimal/*,github.com/Equineregister/*"
jobs:
  golangci-lint:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2.3.4

      - uses: webfactory/ssh-agent@v0.4.1
        with:
          ssh-private-key: |
            ${{ secrets.bitbucketSSHKey }}
            ${{ secrets.sshKey }}

      - name: Configure SSH access to bitbucket.org
        run: |
          echo "bitbucket.org ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC3T1KYi3wOKw6BAfSCqe8HntetabSwbXUpA59/ocKjfFmpGN3s3o8EPu4Csx43o5vDnNpp0ngSTGLUpDUyOoEsqFxgcUHdw+WSSe87r/2mywPzvGnPmDMRyMUvPcUrkyo+9Yo13jkAEobjXpAuRcme7XDfXZGO+AxwT7hK3aohgk+HtMilNoCEdVNOjvUYptU0wG2T492DsTOURUE84FGy+MQqUJ4G15KDGy8S/Es13EI/DJb1TOk75xQp00vfyJ2pk/0Zap8p+i9jKs4mwg3VdQiPk3ofixgsAmtDrJSSoxDr2fGPC2j80caYzIB5vPohP4jQLmAoa2/hjuLX4LQd" >>${HOME}/.ssh/known_hosts
          git config --global --add url."ssh://git@bitbucket.org/".insteadOf "https://bitbucket.org/"

      - name: Configure SSH access to github.com
        run: |
          echo "github.com ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAq2A7hRGmdnm9tUDbO9IDSwBK6TbQa+PXYPCPy6rbTrTtw7PHkccKrpp0yVhp5HdEIcKr6pLlVDBfOLX9QUsyCOV0wzfjIJNlGEYsdlLJizHhbn2mUjvSAHQqZETYP81eFzLQNnPHt4EVVUh7VfDESU84KezmD5QlWpXLmvU31/yMf+Se8xhHTvKSCZIFImWwoG6mbUoWf9nzpIoaSjB+weqqUUmpaaasXVal72J+UX2B+2RPW3RcT0eOzQgqlJL3RKrTJvdsjE3JEAvGq3lGHSZXy28G3skua2SmVi/w4yCE6gbODqnTWlg7+wC604ydGXA8VJiS5ap43JXiUFFAaQ==" >>${HOME}/.ssh/known_hosts
          git config --global --add url."ssh://git@github.com/".insteadOf "https://github.com/"

      - name: Install wireguard
        if: ${{ github.event_name == 'pull_request' }}
        run: |
          sudo apt-get install wireguard
          sudo apt-get install openresolv

      - name: Create wireguard tunnel configuration
        if: ${{ github.event_name == 'pull_request' }}
        run: |
          sed -i -e "s@{{WIREGUARD_DEV_PRIVATE_KEY}}@${{ secrets.wireguardDevPrivateKey }}@" $GITHUB_WORKSPACE/.github/tunnel.conf
          sed -i -e "s@{{WIREGUARD_DEV_SERVER_PUBLIC_KEY}}@${{ secrets.wireguardDevPublicKey }}@" $GITHUB_WORKSPACE/.github/tunnel.conf
          sed -i -e "s@{{WIREGUARD_DEV_SERVER_ENDPOINT}}@${{ secrets.wireguardDevEndpoint }}@" $GITHUB_WORKSPACE/.github/tunnel.conf
          sudo cp $GITHUB_WORKSPACE/.github/tunnel.conf /etc/wireguard/

      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ inputs.goVersion }}

      - name: Generate Goa files
        run : |
          go generate
          find . -maxdepth 1 -type f -not -name 'main.go' -name '*.go' -delete

      - name: Linting
        uses: golangci/golangci-lint-action@v2
        with:
          version: ${{ inputs.lintVersion }}
          args: --modules-download-mode=readonly --enable=gosec,misspell --timeout=5m0s --tests=false

      - name: Open tunnel
        if: ${{ github.event_name == 'pull_request' }}
        run: wg-quick up tunnel

      - name: Unit testing
        if: ${{ github.event_name == 'pull_request' }}
        run: go test -race -count=1 -cover -covermode=atomic ./...

      - name: Close tunnel
        if: ${{ github.event_name == 'pull_request' }}
        run: wg-quick down tunnel
